{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"_2.^beQjx|FGt38A,8(E\">myVariable</variable><variable id=\"f)/S^0zq2~{huxJ8cUE%\">driving_distance</variable><variable id=\"b]9k}YvMF#c}qnw}OH{G\">error</variable><variable id=\"z@n=TI8Wd2XV5bBY@h`L\">speed</variable><variable id=\"[3v,pjcl2!vrJ~c`5;5E\">kp</variable></variables><comment id=\"TPbD$?@|Pod4ykV+}u76\" x=\"890\" y=\"655\" h=\"100\" w=\"100\">kp = 2 when speed = 50; kp = 4 when speed = 100</comment><comment id=\"r-Fcw#$P;0?%pxOTn|0X\" x=\"423\" y=\"943\" h=\"100\" w=\"100\">360 degrees = 8 inches\n180 degrees = \n4 inches</comment><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"10\" y=\"10\"><next><block type=\"iq_sensing_inertial_calibrate\" id=\"Sz+%!AVDg}3*:#?HJ5W1\"><field name=\"INERTIAL\">BrainInertial</field><next><block type=\"iq_motion_set_motor_stopping\" id=\";RkIf.[G(HZnM@~Sr@AZ\"><field name=\"MOTOR\">LeftMotor</field><field name=\"MODE\">brake</field><next><block type=\"iq_motion_set_motor_stopping\" id=\"O$-+U8dK[0RnN7sf3iXv\"><field name=\"MOTOR\">RightMotor</field><field name=\"MODE\">brake</field><next><block type=\"procedures_call\" id=\"`7G~!mF)a_eG}#S=BLW|\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"autodrive %n %n %n %n\" proceduredefid=\"21ZPus)e+)V.XoTaRjun\" argumentids=\"[&quot;yn,Bomyn?B61+k,(=D5g&quot;,&quot;uBSke@jnZf1Yb~!v.qZ@&quot;,&quot;V;5_Q9IYL:(k8!t`G_/1&quot;,&quot;0/rN~x)CuRGbfH|[~8nr&quot;]\" warp=\"false\"></mutation><value name=\"yn,Bomyn?B61+k,(=D5g\"><shadow type=\"math_number\" id=\"N[65jBLM2n{dX.G1o/Z;\"><field name=\"NUM\">3600</field></shadow></value><value name=\"uBSke@jnZf1Yb~!v.qZ@\"><shadow type=\"math_number\" id=\"RiykbW.vLb,U+H]i!NT9\"><field name=\"NUM\">0</field></shadow></value><value name=\"V;5_Q9IYL:(k8!t`G_/1\"><shadow type=\"math_number\" id=\"aWmB_js0$uz8hp@9-:Na\"><field name=\"NUM\">100</field></shadow></value><value name=\"0/rN~x)CuRGbfH|[~8nr\"><shadow type=\"math_number\" id=\"WLdO3l5L(u)pm:S2rvG@\"><field name=\"NUM\">4</field></shadow></value></block></next></block></next></block></next></block></next></block><block type=\"procedures_definition\" id=\"J;#a(jm+K6s;37mr73qM\" x=\"10\" y=\"330\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"21ZPus)e+)V.XoTaRjun\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"autodrive %n %n %n %n\" proceduredefid=\"21ZPus)e+)V.XoTaRjun\" argumentids=\"[&quot;yn,Bomyn?B61+k,(=D5g&quot;,&quot;uBSke@jnZf1Yb~!v.qZ@&quot;,&quot;V;5_Q9IYL:(k8!t`G_/1&quot;,&quot;0/rN~x)CuRGbfH|[~8nr&quot;]\" argumentnames=\"[&quot;distance&quot;,&quot;heading&quot;,&quot;speed&quot;,&quot;kp&quot;]\" argumentdefaults=\"[&quot;todo&quot;,&quot;todo&quot;,&quot;todo&quot;,&quot;todo&quot;]\" argumenttypes=\"[&quot;n&quot;,&quot;n&quot;,&quot;n&quot;,&quot;n&quot;]\" warp=\"false\"></mutation><value name=\"yn,Bomyn?B61+k,(=D5g\"><shadow type=\"argument_reporter_number\" id=\"5i]$-c61j5HwoCH(LIk*\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"autodrive_distance_heading_speed_kp\" argumentid=\"yn,Bomyn?B61+k,(=D5g\" proceduredefid=\"21ZPus)e+)V.XoTaRjun\"></mutation><field name=\"VALUE\">distance</field></shadow></value><value name=\"uBSke@jnZf1Yb~!v.qZ@\"><shadow type=\"argument_reporter_number\" id=\"620[78a%8/uq9_Lw2vLX\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"autodrive_distance_heading_speed_kp\" argumentid=\"uBSke@jnZf1Yb~!v.qZ@\" proceduredefid=\"21ZPus)e+)V.XoTaRjun\"></mutation><field name=\"VALUE\">heading</field></shadow></value><value name=\"V;5_Q9IYL:(k8!t`G_/1\"><shadow type=\"argument_reporter_number\" id=\";l-*mGt?@v,|Qo`:~F-a\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"autodrive_distance_heading_speed_kp\" argumentid=\"V;5_Q9IYL:(k8!t`G_/1\" proceduredefid=\"21ZPus)e+)V.XoTaRjun\"></mutation><field name=\"VALUE\">speed</field></shadow></value><value name=\"0/rN~x)CuRGbfH|[~8nr\"><shadow type=\"argument_reporter_number\" id=\"v?uXDVR|fSu;|+^$d|w2\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"autodrive_distance_heading_speed_kp\" argumentid=\"0/rN~x)CuRGbfH|[~8nr\" proceduredefid=\"21ZPus)e+)V.XoTaRjun\"></mutation><field name=\"VALUE\">kp</field></shadow></value></shadow></statement><next><block type=\"iq_motion_spin\" id=\"p+CE~Ff641IX$;P9q,6B\"><field name=\"MOTOR\">LeftMotor</field><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_motion_spin\" id=\"JZtEHTJ22qER-qCp,8ON\"><field name=\"MOTOR\">RightMotor</field><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_control_while\" id=\"iWy#IOuHk(e`h?dG9EFD\"><value name=\"CONDITION\"><block type=\"iq_operator_less_than\" id=\"V{hhrx%CLDQ*;Zb^Fvq*\"><value name=\"OPERAND1\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"iq_sensing_position_of_motor\" id=\"X^3%hqL+kF^2{)7rGRKr\"><field name=\"MOTOR\">LeftMotor</field><field name=\"UNITS\">deg</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"V=X8Ah`uoSHJDp.q~UuN\"><field name=\"NUM\">50</field></shadow><block type=\"argument_reporter_number\" id=\"y1$H^.a1lI+lGFZcWcb+\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"autodrive_distance_heading_speed_kp\" argumentid=\"yn,Bomyn?B61+k,(=D5g\" proceduredefid=\"21ZPus)e+)V.XoTaRjun\"></mutation><field name=\"VALUE\">distance</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_variables_set_variable\" id=\"UG3P+mG66U9BtotyXk!g\"><field name=\"VARIABLE\" id=\"b]9k}YvMF#c}qnw}OH{G\">error</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"wF4jxKLuPfk0tUN*i#]E\"><field name=\"NUM\">0</field></shadow><block type=\"iq_operator_multiply\" id=\"3[dSc*g{@+y2m||el3m;\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"jR6cF*RPvd9A~MRS8B88\"><field name=\"NUM\">0</field></shadow><block type=\"iq_operator_subtract\" id=\"2cMV?]wC[rW}M-77i+ZO\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"d[kM+On(g-z7{,}Joz2V\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\"a/!0C7a^o_pFH;ES0Gz$\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"autodrive_distance_heading_speed_kp\" argumentid=\"uBSke@jnZf1Yb~!v.qZ@\" proceduredefid=\"21ZPus)e+)V.XoTaRjun\"></mutation><field name=\"VALUE\">heading</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"30SlOqJ8@?KCsRs=-dcs\"><field name=\"NUM\">0</field></shadow><block type=\"iq_sensing_rotation_of_gyro\" id=\"Z|unHVwUwhn:@6.F-@NH\"><field name=\"GYRO\">BrainInertial</field></block></value></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"s|k5QH$mHG)@z,S8O?3[\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\"}C-QN]t-$PQWh!*G84gB\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"autodrive_distance_heading_speed_kp\" argumentid=\"0/rN~x)CuRGbfH|[~8nr\" proceduredefid=\"21ZPus)e+)V.XoTaRjun\"></mutation><field name=\"VALUE\">kp</field></block></value></block></value><next><block type=\"iq_looks_print_new\" id=\"4,jaebdf5E{;LU56-I(`\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"3^Y/ZS|%V]:@6pV^Z%Fe\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_variables_variable\" id=\"Yh|?oJSuGCS[WF5NVx+q\"><field name=\"VARIABLE\" id=\"b]9k}YvMF#c}qnw}OH{G\">error</field></block></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"1AL3t?wjH;{-3w{rK+1`\"><field name=\"MOTOR\">RightMotor</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\"><field name=\"NUM\">50</field></shadow><block type=\"iq_operator_subtract\" id=\",OkpC2UT/.NYAaZAQ^HG\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"k}|ftsRD}_X?*n$u{~#;\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\"5)4db]^p8!qnxk0ti1TA\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"autodrive_distance_heading_speed_kp\" argumentid=\"V;5_Q9IYL:(k8!t`G_/1\" proceduredefid=\"21ZPus)e+)V.XoTaRjun\"></mutation><field name=\"VALUE\">speed</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"iq_variables_variable\" id=\"dESP)JGb`kpNBKxb:W:Y\"><field name=\"VARIABLE\" id=\"b]9k}YvMF#c}qnw}OH{G\">error</field></block></value></block></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"~x20Q1@ZM%Yr.GoOzniU\"><field name=\"MOTOR\">LeftMotor</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\"><field name=\"NUM\">50</field></shadow><block type=\"iq_operator_add\" id=\"49z.zzP+~bV!ASo_9eoh\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"WzhQ{$c+=pOpXQ=_JYsv\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\"6zu71wQO*gvSazd;2$Kz\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"autodrive_distance_heading_speed_kp\" argumentid=\"V;5_Q9IYL:(k8!t`G_/1\" proceduredefid=\"21ZPus)e+)V.XoTaRjun\"></mutation><field name=\"VALUE\">speed</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"iq_variables_variable\" id=\"iRgS{gwoYx}),%WDN5]o\"><field name=\"VARIABLE\" id=\"b]9k}YvMF#c}qnw}OH{G\">error</field></block></value></block></value></block></next></block></next></block></next></block></statement><next><block type=\"iq_motion_stop_motor\" id=\"*F2iHA:^ZeNeW(jaV@I]\"><field name=\"MOTOR\">LeftMotor</field><next><block type=\"iq_motion_stop_motor\" id=\"nsb65DB`rcPKFcuy:GHW\"><field name=\"MOTOR\">RightMotor</field></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[6],"name":"LeftMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[7],"name":"RightMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22}],"slot":0,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftMotor = motor(PORT6, false);\nmotor RightMotor = motor(PORT7, true);\n\n\n\n// Generated code.\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n// User defined function\nvoid myblockfunction_autodrive_distance_heading_speed_kp(double myblockfunction_autodrive_distance_heading_speed_kp__distance, double myblockfunction_autodrive_distance_heading_speed_kp__heading, double myblockfunction_autodrive_distance_heading_speed_kp__speed, double myblockfunction_autodrive_distance_heading_speed_kp__kp);\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable, driving_distance, error, speed, kp;\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToConsole_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Console_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// User defined function\nvoid myblockfunction_autodrive_distance_heading_speed_kp(double myblockfunction_autodrive_distance_heading_speed_kp__distance, double myblockfunction_autodrive_distance_heading_speed_kp__heading, double myblockfunction_autodrive_distance_heading_speed_kp__speed, double myblockfunction_autodrive_distance_heading_speed_kp__kp) {\n  LeftMotor.spin(forward);\n  RightMotor.spin(forward);\n  while ((LeftMotor.position(degrees) < myblockfunction_autodrive_distance_heading_speed_kp__distance)) {\n    error = (myblockfunction_autodrive_distance_heading_speed_kp__heading - BrainInertial.rotation()) * myblockfunction_autodrive_distance_heading_speed_kp__kp;\n    printf(printToConsole_numberFormat(), static_cast<float>(error));\n    printf(\"\\n\");\n    RightMotor.setVelocity((myblockfunction_autodrive_distance_heading_speed_kp__speed - error), percent);\n    LeftMotor.setVelocity((myblockfunction_autodrive_distance_heading_speed_kp__speed + error), percent);\n  wait(20, msec);\n  }\n  LeftMotor.stop();\n  RightMotor.stop();\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  BrainInertial.calibrate();\n  while (BrainInertial.isCalibrating()) { task::sleep(50); }\n  LeftMotor.setStopping(brake);\n  RightMotor.setStopping(brake);\n  myblockfunction_autodrive_distance_heading_speed_kp(3600.0, 0.0, 100.0, 4.0);\n  return 0;\n}\n\n\nint main() {\n  whenStarted1();\n}","target":"Physical"}