{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"_2.^beQjx|FGt38A,8(E\">myVariable</variable><variable id=\"Wrz|n1#[+L*!#sj*$sBF\">LiftRotation</variable><variable type=\"boolean\" id=\"bGI{J6S.G{N_0-,9EuRv\">LiftState</variable><variable type=\"boolean\" id=\"=,G9|~4#BfTF1(LZyYkh\">TestState</variable></variables><block type=\"iq_events_when_controller_button\" id=\".,5gY%d0E=#BJNjF8:X)\" x=\"-150\" y=\"-1390\"><field name=\"BUTTON\">ButtonEUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"procedures_call\" id=\"Dvi@MQgsX)w-6ld5751O\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Test lift %n\" proceduredefid=\"O08,uxGF[MhIi(q6]K2/\" argumentids=\"[&quot;*%)B`^=JuFQ}=sk1/Plk&quot;]\" warp=\"false\"></mutation><value name=\"*%)B`^=JuFQ}=sk1/Plk\"><shadow type=\"math_number\" id=\"l?27_]~53A~}2^lRLtay\"><field name=\"NUM\">10</field></shadow></value><next><block type=\"iq_motion_stop_motor\" id=\"=Lv]Uq~S0o=p/W8?EP[M\"><field name=\"MOTOR\">Lift</field><next><block type=\"procedures_call\" id=\"9A2}v_KpMPHVjSbrM5P;\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Test intake %n\" proceduredefid=\"DNICl|5VAdc%|$aa;~?P\" argumentids=\"[&quot;B@]^xGgYLS/hL~^tSw#:&quot;]\" warp=\"false\"></mutation><value name=\"B@]^xGgYLS/hL~^tSw#:\"><shadow type=\"math_number\" id=\"x2AlP`7!ypXv6k+PXbRx\"><field name=\"NUM\">10</field></shadow></value><next><block type=\"iq_motion_stop_motor\" id=\"mvKWR8(Gi}kV8mvG6NA7\"><field name=\"MOTOR\">Intake</field><next><block type=\"procedures_call\" id=\"@?H/Q~Uym8G86:6vg^r]\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Test drivetrain %n\" proceduredefid=\"EWgzq55+vWc~G/lNSb7[\" argumentids=\"[&quot;7{].yVp@`rYl1MZ)t=+O&quot;]\" warp=\"false\"></mutation><value name=\"7{].yVp@`rYl1MZ)t=+O\"><shadow type=\"math_number\" id=\"@hS2yn!5=W8]qWMo[ef`\"><field name=\"NUM\">10</field></shadow></value><next><block type=\"iq_motion_stop_driving\" id=\"_4gr1K5.=EYfXSZ21,wV\"></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"yJ$lOke~%(eo{lbTbEv,\" x=\"330\" y=\"-1410\"><field name=\"BUTTON\">ButtonFUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"procedures_call\" id=\"VRgCfF[#nfrA`-*tJ*,=\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Test intake %n\" proceduredefid=\"DNICl|5VAdc%|$aa;~?P\" argumentids=\"[&quot;B@]^xGgYLS/hL~^tSw#:&quot;]\" warp=\"false\"></mutation><value name=\"B@]^xGgYLS/hL~^tSw#:\"><shadow type=\"math_number\" id=\":9PDPFE#GjPs_KrR`*^L\"><field name=\"NUM\">10</field></shadow></value><next><block type=\"iq_motion_stop_motor\" id=\"Vk[_2s))a}ktYIhSG~T*\"><field name=\"MOTOR\">Intake</field></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"pK]?y=h+{@~%z#rq@_$g\" x=\"310\" y=\"-1090\"><field name=\"BUTTON\">ButtonFDown</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"procedures_call\" id=\"T[3D|7`c}dV@E+/;|+{A\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Test drivetrain %n\" proceduredefid=\"EWgzq55+vWc~G/lNSb7[\" argumentids=\"[&quot;7{].yVp@`rYl1MZ)t=+O&quot;]\" warp=\"false\"></mutation><value name=\"7{].yVp@`rYl1MZ)t=+O\"><shadow type=\"math_number\" id=\"Bst)5-$:9*5_*sFVa?j6\"><field name=\"NUM\">10</field></shadow></value><next><block type=\"iq_motion_stop_driving\" id=\"-9n_SkYbK_B1)1rEKzLQ\"></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"~5i+1^M@,.?N)|y)FW/g\" x=\"-130\" y=\"-930\"><field name=\"BUTTON\">ButtonEDown</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"procedures_call\" id=\"Dy]^)M!K;duDgv_X1=++\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Test lift %n\" proceduredefid=\"O08,uxGF[MhIi(q6]K2/\" argumentids=\"[&quot;*%)B`^=JuFQ}=sk1/Plk&quot;]\" warp=\"false\"></mutation><value name=\"*%)B`^=JuFQ}=sk1/Plk\"><shadow type=\"math_number\" id=\"tLr?A(]Z=rWQ3Ag`qB0I\"><field name=\"NUM\">10</field></shadow></value><next><block type=\"iq_motion_stop_motor\" id=\"O/w@)]@o=z@1V.|a:]3}\"><field name=\"MOTOR\">Lift</field></block></next></block></next></block><block type=\"procedures_definition\" id=\"]UiN1C6,k/YP$KxtBH4U\" x=\"-130\" y=\"-670\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"O08,uxGF[MhIi(q6]K2/\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Test lift %n\" proceduredefid=\"O08,uxGF[MhIi(q6]K2/\" argumentids=\"[&quot;*%)B`^=JuFQ}=sk1/Plk&quot;]\" argumentnames=\"[&quot;times&quot;]\" argumentdefaults=\"[&quot;todo&quot;]\" argumenttypes=\"[&quot;n&quot;]\" warp=\"false\"></mutation><value name=\"*%)B`^=JuFQ}=sk1/Plk\"><shadow type=\"argument_reporter_number\" id=\"/7tq!;2x}^Sdxn%fF{%g\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"Test_lift_times\" argumentid=\"*%)B`^=JuFQ}=sk1/Plk\" proceduredefid=\"O08,uxGF[MhIi(q6]K2/\"></mutation><field name=\"VALUE\">times</field></shadow></value></shadow></statement><next><block type=\"iq_control_if_then\" id=\"b|p?YuRY+_T+/[SyXcl,\"><value name=\"CONDITION\"><block type=\"iq_operator_not\" id=\"Ee3@#!p/|2^!)EEORg}f\"><value name=\"OPERAND\"><block type=\"iq_variables_boolean_variable\" id=\"ft5rCue#=TW-{!`fP:yD\"><field name=\"VARIABLE\" id=\"=,G9|~4#BfTF1(LZyYkh\" variabletype=\"boolean\">TestState</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_variables_set_boolean_variable\" id=\"hav+_q]u[ZGrP[yt;S4B\"><field name=\"VARIABLE\" id=\"=,G9|~4#BfTF1(LZyYkh\" variabletype=\"boolean\">TestState</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"ia[s!Bgw0@?z=R,cqT*E\"><field name=\"VALUE\">true</field></shadow></value><next><block type=\"iq_other_comment\" id=\"}7#+uHC-ut_J%-KcpL=$\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"{L_f6w_[$edSlLGdFp/[\"><field name=\"comment\">Test Lift</field></shadow></value><next><block type=\"iq_control_repeat\" id=\"T;0vYT/FB)4bFIhg[a/G\"><value name=\"TIMES\"><shadow type=\"math_whole_number\" id=\"PbC^bto]!C6z~u-O1J(2\"><field name=\"NUM\">10</field></shadow><block type=\"argument_reporter_number\" id=\"DWl9t}7^|NNoB[dn%O${\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"Test_lift_times\" argumentid=\"*%)B`^=JuFQ}=sk1/Plk\" proceduredefid=\"O08,uxGF[MhIi(q6]K2/\"></mutation><field name=\"VALUE\">times</field></block></value><statement name=\"SUBSTACK\"><block type=\"procedures_call\" id=\"9ZA#TT9;Z6IT*mlwsKaF\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Lift up\" proceduredefid=\"QDWo{^$aUc%JlHiB!7`r\" argumentids=\"[]\" warp=\"false\"></mutation><next><block type=\"iq_looks_print_new\" id=\"(pJBg,wF},mfwnK0njR(\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"R,F%U/U/C^S*svqU_SDT\"><field name=\"TEXT\">Lift moved up</field></shadow></value><next><block type=\"procedures_call\" id=\"H/gb`d^aNLf^ZOjeupCn\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Lift down\" proceduredefid=\"3VF[@i0nC3LksNE.{v=I\" argumentids=\"[]\" warp=\"false\"></mutation><next><block type=\"iq_looks_print_new\" id=\"1]v$_f)`2DXXStwDnsb)\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"{,1+R7c#O~@a6:lca$d*\"><field name=\"TEXT\">Lift moved down</field></shadow></value></block></next></block></next></block></next></block></statement><next><block type=\"iq_motion_stop_motor\" id=\"FTDK8})OQ-Y1pcIPGqzX\"><field name=\"MOTOR\">Lift</field><next><block type=\"iq_looks_print_new\" id=\"Mux,md*STDh61.w)*E}T\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"PrS-v2:g6S1%7LqEv)9]\"><field name=\"TEXT\">Lift tested</field></shadow></value><next><block type=\"iq_variables_set_boolean_variable\" id=\"a.YO1]q[92;X?M$dW]kz\"><field name=\"VARIABLE\" id=\"=,G9|~4#BfTF1(LZyYkh\" variabletype=\"boolean\">TestState</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"n,MRwr`W;6X?J+PBbfoJ\"><field name=\"VALUE\">false</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block><block type=\"procedures_definition\" id=\"-_tWJvztS$qF:{mamWkK\" x=\"610\" y=\"-650\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"EWgzq55+vWc~G/lNSb7[\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Test drivetrain %n\" proceduredefid=\"EWgzq55+vWc~G/lNSb7[\" argumentids=\"[&quot;7{].yVp@`rYl1MZ)t=+O&quot;]\" argumentnames=\"[&quot;times&quot;]\" argumentdefaults=\"[&quot;todo&quot;]\" argumenttypes=\"[&quot;n&quot;]\" warp=\"false\"></mutation><value name=\"7{].yVp@`rYl1MZ)t=+O\"><shadow type=\"argument_reporter_number\" id=\"qM/emIAC9:8S77}qQbfU\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"Test_drivetrain_times\" argumentid=\"7{].yVp@`rYl1MZ)t=+O\" proceduredefid=\"EWgzq55+vWc~G/lNSb7[\"></mutation><field name=\"VALUE\">times</field></shadow></value></shadow></statement><next><block type=\"iq_control_if_then\" id=\"?/X[dfjE-CrfU0CQFp*0\"><value name=\"CONDITION\"><block type=\"iq_operator_not\" id=\"97R}U+wmHGt7A#(rrEFM\"><value name=\"OPERAND\"><block type=\"iq_variables_boolean_variable\" id=\"j*Na:Wh$Kk9:UjEfSN3s\"><field name=\"VARIABLE\" id=\"=,G9|~4#BfTF1(LZyYkh\" variabletype=\"boolean\">TestState</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_variables_set_boolean_variable\" id=\"j{mjxu%:84Iy^+bLNC^f\"><field name=\"VARIABLE\" id=\"=,G9|~4#BfTF1(LZyYkh\" variabletype=\"boolean\">TestState</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"RIiGL(WtgJw{+$x(U[3;\"><field name=\"VALUE\">true</field></shadow></value><next><block type=\"iq_other_comment\" id=\"D=a1$]8@of/?B7MjBJq!\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"Vvb^^bU,L}.?*?4%DJLY\"><field name=\"comment\">Test Drivetrain</field></shadow></value><next><block type=\"iq_other_comment\" id=\".xXW|0:$6)mmW`FiC%Cl\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"$iSBpi|Cx;[j!)h#zAW7\"><field name=\"comment\">Test forward/backward</field></shadow></value><next><block type=\"iq_drivetrain_drive_for\" id=\"^vaeiO,$4H`9=$J.-IE-\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"`1Q]G5ZBcRY!@Pr5NrUa\"><field name=\"NUM\">200</field></shadow></value><next><block type=\"iq_control_repeat\" id=\"Nii/[,ATbVBP.|qU:5QF\"><value name=\"TIMES\"><shadow type=\"math_whole_number\" id=\"893/a:w*+6mS82|Kck|j\"><field name=\"NUM\">10</field></shadow><block type=\"iq_operator_subtract\" id=\"]mWrvZV%M.md-PQi(;Un\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"7UUp9YHf[|XgX|}z#O8n\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\"uDWt!s{HE8nARF]+usWF\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"Test_drivetrain_times\" argumentid=\"7{].yVp@`rYl1MZ)t=+O\" proceduredefid=\"EWgzq55+vWc~G/lNSb7[\"></mutation><field name=\"VALUE\">times</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"f[C:AY=#P].Br2307wno\"><field name=\"NUM\">1</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_drivetrain_drive_for\" id=\"MLEs[e+MUYuw)R=.k};5\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\".xV-o4vaY8b_2ReO]71j\"><field name=\"NUM\">400</field></shadow></value><next><block type=\"iq_drivetrain_drive_for\" id=\"h0NeBe%S{H.qrSi_^Kyj\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"#}:+c6wu1c/n`Nd447~t\"><field name=\"NUM\">200</field></shadow></value></block></next></block></statement><next><block type=\"iq_other_comment\" id=\"c(PR3Jy*Pw?DG2IOv[q}\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"TU5R%EX|^N}gU0xEN[a6\"><field name=\"comment\">Test left/right 90 deg</field></shadow></value><next><block type=\"iq_drivetrain_turn_for\" id=\"veN9pD?ifqoJ+C90kMS$\"><field name=\"TURNDIRECTION\">left</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\";Zc,]-i$TzU23pdD*|68\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"iq_control_repeat\" id=\"?,oU/c[9??!ywl.Sv{+r\"><value name=\"TIMES\"><shadow type=\"math_whole_number\" id=\"e@Hv9HFJj4ue?p@pl!eG\"><field name=\"NUM\">10</field></shadow><block type=\"iq_operator_subtract\" id=\"=H-NwrH-/Qo]A@mt%dIl\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"31mA~zEt_^E;h$-AGOko\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\"2w=Y9(/kAe*bn,h^wq4P\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"Test_drivetrain_times\" argumentid=\"7{].yVp@`rYl1MZ)t=+O\" proceduredefid=\"EWgzq55+vWc~G/lNSb7[\"></mutation><field name=\"VALUE\">times</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"tjsBrp9:Z#RG_KVzi=U+\"><field name=\"NUM\">1</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_drivetrain_turn_for\" id=\"Z@3s@`5+9+I6z?%mr$DT\"><field name=\"TURNDIRECTION\">right</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\",1p=z(b3|kx]F_iW)$Xy\"><field name=\"NUM\">180</field></shadow></value><next><block type=\"iq_drivetrain_turn_for\" id=\"cu,m:S[*DjVFp0-:mY#v\"><field name=\"TURNDIRECTION\">left</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"TJC$So6c)lw!!H,Bj8(X\"><field name=\"NUM\">90</field></shadow></value></block></next></block></statement><next><block type=\"iq_other_comment\" id=\"qDZ4)R{[!:SfLM8fXsPp\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"g1oDr|Ra=6S_xj*v+k`-\"><field name=\"comment\">Test left/right 360s</field></shadow></value><next><block type=\"iq_control_repeat\" id=\"*T(f99].OB1?lU/s1Y!j\"><value name=\"TIMES\"><shadow type=\"math_whole_number\" id=\"V,^8_nB+YVJgAN5dKss.\"><field name=\"NUM\">10</field></shadow><block type=\"iq_operator_round\" id=\"V}?TTSu}P{~c_jW!gG7I\"><value name=\"NUM\"><shadow type=\"math_number\" id=\"#tk.niolQ{80X9ydmM?}\"><field name=\"NUM\">0</field></shadow><block type=\"iq_operator_divide\" id=\"AU6|tI$@_Fxm`byf~ht+\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"4fST2GV@GKq_}{psY1fH\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\"K:YK#fN*l83Yh_HFijxy\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"Test_drivetrain_times\" argumentid=\"7{].yVp@`rYl1MZ)t=+O\" proceduredefid=\"EWgzq55+vWc~G/lNSb7[\"></mutation><field name=\"VALUE\">times</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"9!tkEt=d0jGDrC)Fzt5(\"><field name=\"NUM\">2</field></shadow></value></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_drivetrain_turn_for\" id=\"=|mKdE42IFOB]TNtSn}X\"><field name=\"TURNDIRECTION\">left</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"z#at~o~:F3#Epxj$0L=%\"><field name=\"NUM\">360</field></shadow></value><next><block type=\"iq_drivetrain_turn_for\" id=\"R,k+QrK#?vH6+[?~Owxi\"><field name=\"TURNDIRECTION\">right</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"br69]b-lGxq}aVhPX@#B\"><field name=\"NUM\">360</field></shadow></value></block></next></block></statement><next><block type=\"iq_variables_set_boolean_variable\" id=\"xqeO;DEx{m4^8F@8w#?g\"><field name=\"VARIABLE\" id=\"=,G9|~4#BfTF1(LZyYkh\" variabletype=\"boolean\">TestState</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"dHq9G6y[u+ydpE@CQWvk\"><field name=\"VALUE\">false</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block><block type=\"procedures_definition\" id=\"5]Nf6/Z9cx`0FIBly;49\" x=\"-130\" y=\"90\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"DNICl|5VAdc%|$aa;~?P\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Test intake %n\" proceduredefid=\"DNICl|5VAdc%|$aa;~?P\" argumentids=\"[&quot;B@]^xGgYLS/hL~^tSw#:&quot;]\" argumentnames=\"[&quot;times&quot;]\" argumentdefaults=\"[&quot;todo&quot;]\" argumenttypes=\"[&quot;n&quot;]\" warp=\"false\"></mutation><value name=\"B@]^xGgYLS/hL~^tSw#:\"><shadow type=\"argument_reporter_number\" id=\"F]~M?-Nf^E:/P`tC!1gq\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"Test_intake_times\" argumentid=\"B@]^xGgYLS/hL~^tSw#:\" proceduredefid=\"DNICl|5VAdc%|$aa;~?P\"></mutation><field name=\"VALUE\">times</field></shadow></value></shadow></statement><next><block type=\"iq_control_if_then\" id=\"b(6XGz[svd9Eac#:++{Z\"><value name=\"CONDITION\"><block type=\"iq_operator_not\" id=\"ZQX$a4NE~c,u1wE?Z)nq\"><value name=\"OPERAND\"><block type=\"iq_variables_boolean_variable\" id=\"V#h+w_-_bhcPMzl]VX`6\"><field name=\"VARIABLE\" id=\"=,G9|~4#BfTF1(LZyYkh\" variabletype=\"boolean\">TestState</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_variables_set_boolean_variable\" id=\"_WN53=ZtVM(#JqFtjE$f\"><field name=\"VARIABLE\" id=\"=,G9|~4#BfTF1(LZyYkh\" variabletype=\"boolean\">TestState</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"PMa}-5XwT7?(A+nvGJMO\"><field name=\"VALUE\">true</field></shadow></value><next><block type=\"iq_other_comment\" id=\"FaN[((xr-O`rh3(2K!8*\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"v=(~nJdARWVp^Ki[$@v2\"><field name=\"comment\">Test Intake</field></shadow></value><next><block type=\"iq_control_repeat\" id=\"v4k80]CXyQ0P7Kw+QG|q\"><value name=\"TIMES\"><shadow type=\"math_whole_number\" id=\"qDYNtj]:0?})[l@aY8+8\"><field name=\"NUM\">10</field></shadow><block type=\"argument_reporter_number\" id=\"0%JV=.RW==L57Dc%[Md:\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"Test_intake_times\" argumentid=\"B@]^xGgYLS/hL~^tSw#:\" proceduredefid=\"DNICl|5VAdc%|$aa;~?P\"></mutation><field name=\"VALUE\">times</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_motion_spin\" id=\"S/aBF|=`I:/z|o($XQ_f\"><field name=\"MOTOR\">Intake</field><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_control_wait\" id=\"T9iR|_cd.eyJecaIV]BJ\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"e6JRfIg{5ka7bY4XHJYZ\"><field name=\"NUM\">5</field></shadow></value><next><block type=\"iq_motion_stop_motor\" id=\"hK2@$Ikly9GeH!DTs+8z\"><field name=\"MOTOR\">Intake</field><next><block type=\"iq_looks_print_new\" id=\"vP3mA7piW7D%^zc{71wq\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"6SvHFpz_9KPiyaGJQ*b%\"><field name=\"TEXT\">Intake moved in</field></shadow></value><next><block type=\"iq_motion_spin\" id=\"5N3BarIcBI`R(;DV^IHD\"><field name=\"MOTOR\">Intake</field><field name=\"DIRECTION\">rev</field><next><block type=\"iq_control_wait\" id=\"-aEA85@k7|mb$8?f0*_.\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"8=~(@dTcK,15,+xc!c7|\"><field name=\"NUM\">5</field></shadow></value><next><block type=\"iq_motion_stop_motor\" id=\"6od`x4[Zv|UzJj=gz,^*\"><field name=\"MOTOR\">Intake</field><next><block type=\"iq_looks_print_new\" id=\"8}jy[(MV?*xz$Yz289-N\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"2D,kp2?c-f:!sY-pvN.L\"><field name=\"TEXT\">Intake moved out</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><next><block type=\"iq_looks_print_new\" id=\"M5R?+#u;r]?:1v;UJfbJ\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"rTk%%`{}3jlJ7OIh~RbQ\"><field name=\"TEXT\">Intake tested</field></shadow></value><next><block type=\"iq_variables_set_boolean_variable\" id=\"zyEXx:1mJa1-St1eC28Z\"><field name=\"VARIABLE\" id=\"=,G9|~4#BfTF1(LZyYkh\" variabletype=\"boolean\">TestState</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"JW;,b2oKeHIc+3$fn}V[\"><field name=\"VALUE\">false</field></shadow></value></block></next></block></next></block></next></block></next></block></statement></block></next></block><block type=\"procedures_definition\" id=\"DRZ(HF8,ceu99m#kP98p\" x=\"130\" y=\"190\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"QDWo{^$aUc%JlHiB!7`r\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Lift up\" proceduredefid=\"QDWo{^$aUc%JlHiB!7`r\" argumentids=\"[]\" argumentnames=\"[]\" argumentdefaults=\"[]\" argumenttypes=\"[]\" warp=\"false\"></mutation></shadow></statement><next><block type=\"iq_control_if_then\" id=\"j9ZaK$290?`r[9bs0Jj^\"><value name=\"CONDITION\"><block type=\"iq_operator_not\" id=\"CQ2awmJfw!m;f*-IU=0~\"><value name=\"OPERAND\"><block type=\"iq_variables_boolean_variable\" id=\"zWE~R#_ZeUAI|mP[Ze~~\"><field name=\"VARIABLE\" id=\"bGI{J6S.G{N_0-,9EuRv\" variabletype=\"boolean\">LiftState</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_other_comment\" id=\"Bs9/xrC-K3?fpV1nK-Eh\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"j]}B=77T`O|$2mp13cf@\"><field name=\"comment\">^ If lift is not running</field></shadow></value><next><block type=\"iq_variables_set_boolean_variable\" id=\"=2/$8V:^=$:7ty-588zE\"><field name=\"VARIABLE\" id=\"bGI{J6S.G{N_0-,9EuRv\" variabletype=\"boolean\">LiftState</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"n}TraJTW~h^){v+Gm^U3\"><field name=\"VALUE\">true</field></shadow></value><next><block type=\"iq_other_comment\" id=\"Q=`=|-+Ar^u5x8RgFQIa\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"]3ctK?K22O!8;PHYmpIi\"><field name=\"comment\">^ Set state</field></shadow></value><next><block type=\"iq_sounds_play_sound\" id=\"n+.0B@]vxl/d6rQRg~L-\"><field name=\"SOUND\">carAlarm2</field><next><block type=\"iq_looks_print_new\" id=\"3T8dz%+]9jh-P#Q}]9Pd\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\";FfSK2)i3!PA=Qq4RH(p\"><field name=\"TEXT\">VEXcode</field></shadow></value><next><block type=\"iq_variables_set_variable\" id=\"*6,:XzHdW^R{ZWbGdci=\"><field name=\"VARIABLE\" id=\"Wrz|n1#[+L*!#sj*$sBF\">LiftRotation</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"|4Q,SrS7(UZUy),m.!*z\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"iq_other_comment\" id=\"bAo7?4Nk`3f}r8J@lAs8\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"g,q38V):#U?MLblK:p^a\"><field name=\"comment\">^ LiftRotation tracks number of rotations lift motor system runs through</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"kPovj$eFY.L#v43V*.*O\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_variables_variable\" id=\"Opk/YFy}Y@B4{B(u%{j{\"><field name=\"VARIABLE\" id=\"Wrz|n1#[+L*!#sj*$sBF\">LiftRotation</field></block></value><next><block type=\"iq_control_repeat_until\" id=\"Wamvlj%i[Hu].48$Y^z#\"><value name=\"CONDITION\"><block type=\"iq_sensing_pressing_bumper\" id=\"c8(%98jw?iQZ46n#+e0n\"><field name=\"BUMPER\">TopBumper</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_looks_print_new\" id=\"wt~N`Eb,U9FA:lviUy94\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"{^YnMvw6X^{|~=3GB10q\"><field name=\"TEXT\">Rotation </field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"_K]+$tBb,$A@E5x^5I5q\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_variables_variable\" id=\"y~P_ON]6SmQxi_LTdDIb\"><field name=\"VARIABLE\" id=\"Wrz|n1#[+L*!#sj*$sBF\">LiftRotation</field></block></value><next><block type=\"iq_motion_spin_for\" id=\"CVb!_+[J_$*WQT=Aud=1\"><field name=\"MOTOR\">Lift</field><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">rev</field><field name=\"anddontwait_mutator\">true</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"~ak9(~c8rXJ@AM8ys~{i\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_variables_change_variable\" id=\"`{^BSC7CsNdQx5*W[ABa\"><field name=\"VARIABLE\" id=\"Wrz|n1#[+L*!#sj*$sBF\">LiftRotation</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"J%TrtJqy!Z;mc@}ZBKL1\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_other_comment\" id=\"z@QDGpk3K!W/o%SNp8sm\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"_9NNyek{DL/OE5#1QYta\"><field name=\"comment\">^ The lift moves, tracking each rotation, until the bumper at the bottom is pressed.</field></shadow></value></block></next></block></next></block></next></block></next></block></statement><next><block type=\"iq_looks_print_new\" id=\"{`Yzy5T=D7inBl)!q:3Z\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"84r_#{flA[rjS+yrMEWf\"><field name=\"TEXT\">Top bumper pressed</field></shadow></value><next><block type=\"iq_motion_stop_motor\" id=\"(6OqZ}OJm3h70x`v?b.,\"><field name=\"MOTOR\">Lift</field><next><block type=\"iq_variables_set_boolean_variable\" id=\"I.$j[Ww+X_)!B3q]j)8c\"><field name=\"VARIABLE\" id=\"bGI{J6S.G{N_0-,9EuRv\" variabletype=\"boolean\">LiftState</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\",?LTG.bpAR:I{Qr.%W]q\"><field name=\"VALUE\">true</field></shadow></value><next><block type=\"iq_other_comment\" id=\"MQwBWKypnCL;Q/t$%5]4\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"#dW;/CK^zz/?%=2]e).w\"><field name=\"comment\">^ Set state to not running, enabling another run</field></shadow></value><next><block type=\"iq_variables_set_boolean_variable\" id=\"RK5R8MR|nQ4`XMDu[y2/\"><field name=\"VARIABLE\" id=\"=,G9|~4#BfTF1(LZyYkh\" variabletype=\"boolean\">TestState</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"y4a{qXU{xz^mX9~s,?%`\"><field name=\"VALUE\">false</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block><block type=\"iq_events_when_started\" id=\"N?PX|nzgqN^Mj0RoxcH!\" x=\"10\" y=\"1410\"><next><block type=\"iq_variables_set_boolean_variable\" id=\".7~[ow0!TTU-,bO.nh6o\"><field name=\"VARIABLE\" id=\"bGI{J6S.G{N_0-,9EuRv\" variabletype=\"boolean\">LiftState</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"`oxcl9lmXMBX6%/0();|\"><field name=\"VALUE\">false</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"6k.Zcfu5a2eUmg._FNZc\"><field name=\"MOTOR\">Lift</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"@X=v];eeHbt)sm}0z!Tc\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_drivetrain_set_drive_velocity\" id=\"sH?|`,i~V(qlK}Uri~n@\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"g`X^Gb3ugJ=j:2qrSG[#\"><field name=\"NUM\">100</field></shadow></value></block></next></block></next></block></next></block><block type=\"procedures_definition\" id=\"MePR*zXECwj6iC%X,k?_\" x=\"10\" y=\"1690\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"3VF[@i0nC3LksNE.{v=I\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Lift down\" proceduredefid=\"3VF[@i0nC3LksNE.{v=I\" argumentids=\"[]\" argumentnames=\"[]\" argumentdefaults=\"[]\" argumenttypes=\"[]\" warp=\"false\"></mutation></shadow></statement><next><block type=\"iq_control_if_then\" id=\"35i;oiZC}M6z9cIMe@Lf\"><value name=\"CONDITION\"><block type=\"iq_operator_not\" id=\"3!oc0HuQGprb1FHiXnn]\"><value name=\"OPERAND\"><block type=\"iq_variables_boolean_variable\" id=\"pZnu^o^dD2W[[%-2RBW|\"><field name=\"VARIABLE\" id=\"bGI{J6S.G{N_0-,9EuRv\" variabletype=\"boolean\">LiftState</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_other_comment\" id=\"Io_:y$o5WusNvndl??um\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\".fyo|:FU]}U%flIXj|L4\"><field name=\"comment\">^ If lift is not running</field></shadow></value><next><block type=\"iq_variables_set_boolean_variable\" id=\"pe-!82t2q%%ofl5q8.(W\"><field name=\"VARIABLE\" id=\"bGI{J6S.G{N_0-,9EuRv\" variabletype=\"boolean\">LiftState</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"8%U=sUDH0zhI6osq!r2s\"><field name=\"VALUE\">true</field></shadow></value><next><block type=\"iq_other_comment\" id=\"}}yq,*mpiNEI`^za4^CK\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"6Ozt8U5TKON5XQJoM8_H\"><field name=\"comment\">^ Set state</field></shadow></value><next><block type=\"iq_sounds_play_sound\" id=\"p!:3fuUTTRT%hDmpguzH\"><field name=\"SOUND\">siren2</field><next><block type=\"iq_looks_print_new\" id=\"2{+O.[bj`Mi^s/$tzZ|P\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"~_lQj?GML8MJ:,7.s1a=\"><field name=\"TEXT\">VEXcode</field></shadow></value><next><block type=\"iq_variables_set_variable\" id=\"HLI4XDJ{$BrIgE|PZOR~\"><field name=\"VARIABLE\" id=\"Wrz|n1#[+L*!#sj*$sBF\">LiftRotation</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"CL({}8.AEB~Kj+g3kn4w\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"iq_other_comment\" id=\"lZdvv{MWc4DO7,OmeBe}\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"lR5y5)?$7i1/Uj}USMLJ\"><field name=\"comment\">^ LiftRotation tracks number of rotations lift motor system runs through</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"FTArC@/lSR(bxZMgCfWp\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"`nKb?KiE~lKC^3wct;iV\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_variables_variable\" id=\"hSRN_/w{Tc`@Mvt8X{QP\"><field name=\"VARIABLE\" id=\"Wrz|n1#[+L*!#sj*$sBF\">LiftRotation</field></block></value><next><block type=\"iq_control_repeat_until\" id=\"wLHhFZL,_Bl58Dku89HF\"><value name=\"CONDITION\"><block type=\"iq_sensing_pressing_bumper\" id=\"Z(z}fOuNJ2hcm9Bb5Hb@\"><field name=\"BUMPER\">BottomBumper</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_looks_print_new\" id=\"!{6s!h3syHvrO5P;Q9/w\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"`.xk.juORM_Sgu0Q!Ws@\"><field name=\"TEXT\">Rotation </field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"3~/*^ajP3Etp!)mHXgKJ\"><field name=\"TARGET\">Console</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"2iPXPJaj!9B:Nsg..?X/\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_variables_variable\" id=\"TJ95=(D6d7pk_*#|!,ww\"><field name=\"VARIABLE\" id=\"Wrz|n1#[+L*!#sj*$sBF\">LiftRotation</field></block></value><next><block type=\"iq_motion_spin_for\" id=\":cz:GGMgV,I1Wu3!u{Lv\"><field name=\"MOTOR\">Lift</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">rev</field><field name=\"anddontwait_mutator\">true</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"#d%wCkwcz.4N(vElzQLL\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_variables_change_variable\" id=\"TAFhg/CXoh8@DlgoDN(*\"><field name=\"VARIABLE\" id=\"Wrz|n1#[+L*!#sj*$sBF\">LiftRotation</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"po_C}aU4{z$X70kou~_n\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_other_comment\" id=\"u@L)tHA@aAPBZ{n#]Pzk\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"B+Y6r?FycPS~OyV^aa?H\"><field name=\"comment\">^ The lift moves, tracking each rotation, until the bumper at the bottom is pressed.</field></shadow></value></block></next></block></next></block></next></block></next></block></statement><next><block type=\"iq_looks_print_new\" id=\":9H*+B3y/{MTjZ=TGHK#\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"|-[=_MG~Yaf(vsCi#9!+\"><field name=\"TEXT\">Bottom bumper pressed</field></shadow></value><next><block type=\"iq_motion_stop_motor\" id=\"T8n[OnMrf5WRCC6gh|@H\"><field name=\"MOTOR\">Lift</field><next><block type=\"iq_variables_set_boolean_variable\" id=\"T6Pfw{H,W#ysafJl]BH@\"><field name=\"VARIABLE\" id=\"bGI{J6S.G{N_0-,9EuRv\" variabletype=\"boolean\">LiftState</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"H7f]Xc#(j*Bqxd.v,KhD\"><field name=\"VALUE\">true</field></shadow></value><next><block type=\"iq_other_comment\" id=\"Mr`wAsoOI[d5,#*RWzqG\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\".;P!XVj(s18:7Hbpmgu9\"><field name=\"comment\">^ Set state to not running, enabling another run</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></xml>","rconfig":[{"port":[1,2,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"}},{"port":[3,4],"name":"Intake","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","motor_a_reversed":"false","motor_b_reversed":"true"}},{"port":[12,11],"name":"Lift","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","motor_a_reversed":"false","motor_b_reversed":"true"}},{"port":[8],"name":"BottomBumper","customName":true,"deviceType":"Bumper","deviceClass":"bumper","setting":{}},{"port":[9],"name":"TopBumper","customName":true,"deviceType":"Bumper","deviceClass":"bumper","setting":{}},{"port":[6],"name":"Autonomous","customName":true,"deviceType":"TouchLED","deviceClass":"touchled","setting":{}},{"port":[5],"name":"AutonomousSafety","customName":true,"deviceType":"TouchLED","deviceClass":"touchled","setting":{}},{"port":[],"name":"Controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"Lift","leftDir":"false","right":"Intake","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"split"}}],"slot":2,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftDriveSmart = motor(PORT1, 1, false);\nmotor RightDriveSmart = motor(PORT2, 1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 200, 173, 76, mm, 1);\nmotor IntakeMotorA = motor(PORT3, false);\nmotor IntakeMotorB = motor(PORT4, true);\nmotor_group Intake = motor_group(IntakeMotorA, IntakeMotorB);\n\nmotor LiftMotorA = motor(PORT12, false);\nmotor LiftMotorB = motor(PORT11, true);\nmotor_group Lift = motor_group(LiftMotorA, LiftMotorB);\n\nbumper BottomBumper = bumper(PORT8);\nbumper TopBumper = bumper(PORT9);\ntouchled Autonomous = touchled(PORT6);\ntouchled AutonomousSafety = touchled(PORT5);\ncontroller Controller = controller();\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool ControllerLeftShoulderControlMotorsStopped = true;\nbool ControllerRightShoulderControlMotorsStopped = true;\nbool DrivetrainLNeedsToBeStopped_Controller = true;\nbool DrivetrainRNeedsToBeStopped_Controller = true;\n\n// define a task that will handle monitoring inputs from Controller\nint rc_auto_loop_function_Controller() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      \n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = AxisA + AxisC\n      // right = AxisA - AxisC\n      int drivetrainLeftSideSpeed = Controller.AxisA.position() + Controller.AxisC.position();\n      int drivetrainRightSideSpeed = Controller.AxisA.position() - Controller.AxisC.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n      // check the ButtonLUp/ButtonLDown status to control Lift\n      if (Controller.ButtonLUp.pressing()) {\n        Lift.spin(forward);\n        ControllerLeftShoulderControlMotorsStopped = false;\n      } else if (Controller.ButtonLDown.pressing()) {\n        Lift.spin(reverse);\n        ControllerLeftShoulderControlMotorsStopped = false;\n      } else if (!ControllerLeftShoulderControlMotorsStopped) {\n        Lift.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        ControllerLeftShoulderControlMotorsStopped = true;\n      }\n      // check the ButtonRUp/ButtonRDown status to control Intake\n      if (Controller.ButtonRUp.pressing()) {\n        Intake.spin(forward);\n        ControllerRightShoulderControlMotorsStopped = false;\n      } else if (Controller.ButtonRDown.pressing()) {\n        Intake.spin(reverse);\n        ControllerRightShoulderControlMotorsStopped = false;\n      } else if (!ControllerRightShoulderControlMotorsStopped) {\n        Intake.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        ControllerRightShoulderControlMotorsStopped = true;\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller(rc_auto_loop_function_Controller);\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n// User defined function\nvoid myblockfunction_Test_lift_times(double myblockfunction_Test_lift_times__times);\n// User defined function\nvoid myblockfunction_Test_drivetrain_times(double myblockfunction_Test_drivetrain_times__times);\n// User defined function\nvoid myblockfunction_Test_intake_times(double myblockfunction_Test_intake_times__times);\n// User defined function\nvoid myblockfunction_Lift_up();\n// User defined function\nvoid myblockfunction_Lift_down();\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable, LiftRotation;\n\nbool LiftState, TestState;\n\n// User defined function\nvoid myblockfunction_Test_lift_times(double myblockfunction_Test_lift_times__times) {\n  if (!TestState) {\n    TestState = true;\n    // Test Lift\n    repeat(myblockfunction_Test_lift_times__times) {\n      myblockfunction_Lift_up();\n      printf(\"Lift moved up\");\n      printf(\"\\n\");\n      myblockfunction_Lift_down();\n      printf(\"Lift moved down\");\n      printf(\"\\n\");\n      wait(20, msec);\n    }\n    Lift.stop();\n    Brain.Screen.print(\"Lift tested\");\n    TestState = false;\n  }\n}\n\n// User defined function\nvoid myblockfunction_Test_drivetrain_times(double myblockfunction_Test_drivetrain_times__times) {\n  if (!TestState) {\n    TestState = true;\n    // Test Drivetrain\n    // Test forward/backward\n    Drivetrain.driveFor(forward, 200.0, mm, true);\n    repeat(myblockfunction_Test_drivetrain_times__times - 1.0) {\n      Drivetrain.driveFor(reverse, 400.0, mm, true);\n      Drivetrain.driveFor(forward, 200.0, mm, true);\n      wait(20, msec);\n    }\n    // Test left/right 90 deg\n    Drivetrain.turnFor(left, 90.0, degrees, true);\n    repeat(myblockfunction_Test_drivetrain_times__times - 1.0) {\n      Drivetrain.turnFor(right, 180.0, degrees, true);\n      Drivetrain.turnFor(left, 90.0, degrees, true);\n      wait(20, msec);\n    }\n    // Test left/right 360s\n    repeat(round(myblockfunction_Test_drivetrain_times__times / 2.0)) {\n      Drivetrain.turnFor(left, 360.0, degrees, true);\n      Drivetrain.turnFor(right, 360.0, degrees, true);\n      wait(20, msec);\n    }\n    TestState = false;\n  }\n}\n\n// User defined function\nvoid myblockfunction_Test_intake_times(double myblockfunction_Test_intake_times__times) {\n  if (!TestState) {\n    TestState = true;\n    // Test Intake\n    repeat(myblockfunction_Test_intake_times__times) {\n      Intake.spin(forward);\n      wait(5.0, seconds);\n      Intake.stop();\n      printf(\"Intake moved in\");\n      printf(\"\\n\");\n      Intake.spin(reverse);\n      wait(5.0, seconds);\n      Intake.stop();\n      printf(\"Intake moved out\");\n      printf(\"\\n\");\n      wait(20, msec);\n    }\n    Brain.Screen.print(\"Intake tested\");\n    TestState = false;\n  }\n}\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToConsole_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Console_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// User defined function\nvoid myblockfunction_Lift_up() {\n  if (!LiftState) {\n    // ^ If lift is not running\n    LiftState = true;\n    // ^ Set state\n    Brain.playSound(alarm);\n    printf(\"VEXcode\");\n    printf(\"\\n\");\n    LiftRotation = 0.0;\n    // ^ LiftRotation tracks number of rotations lift motor system runs through\n    printf(printToConsole_numberFormat(), static_cast<float>(LiftRotation));\n    printf(\"\\n\");\n    while (!TopBumper.pressing()) {\n      printf(\"Rotation \");\n      printf(printToConsole_numberFormat(), static_cast<float>(LiftRotation));\n      printf(\"\\n\");\n      Lift.spinFor(reverse, 1.0, turns, false);\n      LiftRotation = LiftRotation + 1.0;\n      // ^ The lift moves, tracking each rotation, until the bumper at the bottom is pressed.\n    wait(20, msec);\n    }\n    printf(\"Top bumper pressed\");\n    printf(\"\\n\");\n    Lift.stop();\n    LiftState = true;\n    // ^ Set state to not running, enabling another run\n    TestState = false;\n  }\n}\n\n// User defined function\nvoid myblockfunction_Lift_down() {\n  if (!LiftState) {\n    // ^ If lift is not running\n    LiftState = true;\n    // ^ Set state\n    Brain.playSound(siren);\n    printf(\"VEXcode\");\n    printf(\"\\n\");\n    LiftRotation = 0.0;\n    // ^ LiftRotation tracks number of rotations lift motor system runs through\n    printf(printToConsole_numberFormat(), static_cast<float>(LiftRotation));\n    printf(\"\\n\");\n    while (!BottomBumper.pressing()) {\n      printf(\"Rotation \");\n      printf(printToConsole_numberFormat(), static_cast<float>(LiftRotation));\n      printf(\"\\n\");\n      Lift.spinFor(forward, 1.0, turns, false);\n      LiftRotation = LiftRotation + 1.0;\n      // ^ The lift moves, tracking each rotation, until the bumper at the bottom is pressed.\n    wait(20, msec);\n    }\n    Brain.Screen.print(\"Bottom bumper pressed\");\n    Lift.stop();\n    LiftState = true;\n    // ^ Set state to not running, enabling another run\n  }\n}\n\n// \"when Controller ButtonEUp pressed\" hat block\nvoid onevent_ControllerButtonEUp_pressed_0() {\n  myblockfunction_Test_lift_times(10.0);\n  Lift.stop();\n  myblockfunction_Test_intake_times(10.0);\n  Intake.stop();\n  myblockfunction_Test_drivetrain_times(10.0);\n  Drivetrain.stop();\n}\n\n// \"when Controller ButtonFUp pressed\" hat block\nvoid onevent_ControllerButtonFUp_pressed_0() {\n  myblockfunction_Test_intake_times(10.0);\n  Intake.stop();\n}\n\n// \"when Controller ButtonFDown pressed\" hat block\nvoid onevent_ControllerButtonFDown_pressed_0() {\n  myblockfunction_Test_drivetrain_times(10.0);\n  Drivetrain.stop();\n}\n\n// \"when Controller ButtonEDown pressed\" hat block\nvoid onevent_ControllerButtonEDown_pressed_0() {\n  myblockfunction_Test_lift_times(10.0);\n  Lift.stop();\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  LiftState = false;\n  Lift.setVelocity(100.0, percent);\n  Drivetrain.setDriveVelocity(100.0, percent);\n  return 0;\n}\n\n\nint main() {\n  // register event handlers\n  Controller.ButtonEUp.pressed(onevent_ControllerButtonEUp_pressed_0);\n  Controller.ButtonFUp.pressed(onevent_ControllerButtonFUp_pressed_0);\n  Controller.ButtonFDown.pressed(onevent_ControllerButtonFDown_pressed_0);\n  Controller.ButtonEDown.pressed(onevent_ControllerButtonEDown_pressed_0);\n\n  wait(15, msec);\n  whenStarted1();\n}","target":"Physical"}